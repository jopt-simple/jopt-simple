<?xml version="1.0" encoding="UTF-8"?>
<project>
    <target name="-paste-examples">
        <filterchain id="htmlFilter">
            <filterreader
                classname="joptsimple.examples.ant.filters.HTMLEntitifier"
                classpath="${example.class.path}"/>
        </filterchain>
        <loadfile property="short.options.example"
            srcfile="${example.src.dir}/joptsimple/examples/ShortOptionsTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="short.options.with.arguments.example"
            srcfile="${example.src.dir}/joptsimple/examples/ShortOptionsWithArgumentsTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="short.options.with.argument.positioning.example"
            srcfile="${example.src.dir}/joptsimple/examples/ShortOptionsWithArgumentPositioningTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="short.options.with.multiple.arguments.for.single.option.example"
            srcfile="${example.src.dir}/joptsimple/examples/ShortOptionsWithMultipleArgumentsForSingleOptionTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="short.options.clustering.example"
            srcfile="${example.src.dir}/joptsimple/examples/ShortOptionsClusteringTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
    	<loadfile property="short.options.clustering.with.argument.example"
    	   srcfile="${example.src.dir}/joptsimple/examples/ShortOptionsClusteringWithArgumentTest.java">
    	   <filterchain refid="htmlFilter"/>
    	</loadfile>
        <loadfile property="long.options.example"
            srcfile="${example.src.dir}/joptsimple/examples/LongOptionsTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="long.options.with.arguments.example"
            srcfile="${example.src.dir}/joptsimple/examples/LongOptionsWithArgumentsTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="long.options.with.argument.positioning.example"
            srcfile="${example.src.dir}/joptsimple/examples/LongOptionsWithArgumentPositioningTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="alternative.long.options.example"
            srcfile="${example.src.dir}/joptsimple/examples/AlternativeLongOptionsTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="option.argument.value.type.example"
            srcfile="${example.src.dir}/joptsimple/examples/OptionArgumentValueTypeTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="option.argument.converter.example"
            srcfile="${example.src.dir}/joptsimple/examples/OptionArgumentConverterTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="typesafe.option.argument.retrieval.example"
            srcfile="${example.src.dir}/joptsimple/examples/TypesafeOptionArgumentRetrievalTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="required.options.example"
            srcfile="${example.src.dir}/joptsimple/examples/RequiredOptionsTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="default.values.for.option.arguments.example"
            srcfile="${example.src.dir}/joptsimple/examples/DefaultValuesForOptionArgumentsTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="option.synonym.example"
            srcfile="${example.src.dir}/joptsimple/examples/OptionSynonymTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="multiple.delimited.arguments.example"
            srcfile="${example.src.dir}/joptsimple/examples/MultipleDelimitedArgumentsTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="signalling.end.of.options.example"
            srcfile="${example.src.dir}/joptsimple/examples/SignallingEndOfOptionsTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="posixly.correct.example"
            srcfile="${example.src.dir}/joptsimple/examples/PosixlyCorrectTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="special.optional.argument.handling.example"
            srcfile="${example.src.dir}/joptsimple/examples/SpecialOptionalArgumentHandlingTest.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="help.screen.example"
            srcfile="${example.src.dir}/joptsimple/examples/HelpScreenExample.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <java classname="joptsimple.examples.HelpScreenExample"
            fork="yes"
            output="${java.io.tmpdir}/help-output.txt"
            classpath="${example.class.path}">
        </java>
        <loadfile property="help.screen.example.help"
            srcfile="${java.io.tmpdir}/help-output.txt">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <loadfile property="help.formatter.example"
            srcfile="${example.src.dir}/joptsimple/examples/HelpFormatterExample.java">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <java classname="joptsimple.examples.HelpFormatterExample"
            fork="yes"
            output="${java.io.tmpdir}/help-formatter-output.txt"
            classpath="${example.class.path}">
        </java>
        <loadfile property="help.formatter.example.output"
            srcfile="${java.io.tmpdir}/help-formatter-output.txt">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <java classname="joptsimple.examples.ExceptionExample"
            fork="yes"
            output="${java.io.tmpdir}/stack-trace-output.txt"
            classpath="${example.class.path}">
        </java>
        <loadfile property="example.stack.trace"
            srcfile="${java.io.tmpdir}/stack-trace-output.txt">
            <filterchain refid="htmlFilter"/>
        </loadfile>
        <replace dir="${website.staging.dir}" includes="examples.html">
            <replacefilter token="@SHORT_OPTIONS_EXAMPLE@"
                value="${short.options.example}"/>
            <replacefilter token="@SHORT_OPTIONS_WITH_ARGUMENTS_EXAMPLE@"
                value="${short.options.with.arguments.example}"/>
            <replacefilter token="@SHORT_OPTIONS_WITH_ARGUMENT_POSITIONING_EXAMPLE@"
                value="${short.options.with.argument.positioning.example}"/>
            <replacefilter token="@SHORT_OPTIONS_WITH_MULTIPLE_ARGUMENTS_FOR_SINGLE_OPTION_EXAMPLE@"
                value="${short.options.with.multiple.arguments.for.single.option.example}"/>
            <replacefilter token="@SHORT_OPTIONS_CLUSTERING_EXAMPLE@"
                value="${short.options.clustering.example}"/>
        	<replacefilter token="@SHORT_OPTIONS_CLUSTERING_WITH_ARGUMENT_EXAMPLE@"
        	    value="${short.options.clustering.with.argument.example}" />
            <replacefilter token="@LONG_OPTIONS_EXAMPLE@"
                value="${long.options.example}"/>
            <replacefilter token="@LONG_OPTIONS_WITH_ARGUMENTS_EXAMPLE@"
                value="${long.options.with.arguments.example}"/>
            <replacefilter token="@LONG_OPTIONS_WITH_ARGUMENT_POSITIONING_EXAMPLE@"
                value="${long.options.with.argument.positioning.example}"/>
            <replacefilter token="@ALTERNATIVE_LONG_OPTIONS_EXAMPLE@"
                value="${alternative.long.options.example}"/>
            <replacefilter token="@OPTION_ARGUMENT_VALUE_TYPE_EXAMPLE@"
                value="${option.argument.value.type.example}"/>
            <replacefilter token="@OPTION_ARGUMENT_CONVERTER_EXAMPLE@"
                value="${option.argument.converter.example}"/>
            <replacefilter token="@TYPESAFE_OPTION_ARGUMENT_RETRIEVAL_EXAMPLE@"
                value="${typesafe.option.argument.retrieval.example}"/>
            <replacefilter token="@DEFAULT_VALUES_FOR_OPTION_ARGUMENTS_EXAMPLE@"
                value="${default.values.for.option.arguments.example}"/>
            <replacefilter token="@REQUIRED_OPTIONS_EXAMPLE@"
                value="${required.options.example}"/>
            <replacefilter token="@OPTION_SYNONYM_EXAMPLE@"
                value="${option.synonym.example}"/>
            <replacefilter token="@MULTIPLE_DELIMITED_ARGUMENTS_EXAMPLE@"
                value="${multiple.delimited.arguments.example}"/>
            <replacefilter token="@SIGNALLING_END_OF_OPTIONS_EXAMPLE@"
                value="${signalling.end.of.options.example}"/>
            <replacefilter token="@POSIXLY_CORRECT_EXAMPLE@"
                value="${posixly.correct.example}"/>
            <replacefilter token="@SPECIAL_OPTIONAL_ARGUMENT_HANDLING_EXAMPLE@"
                value="${special.optional.argument.handling.example}"/>
            <replacefilter token="@HELP_SCREEN_EXAMPLE@"
                value="${help.screen.example}"/>
            <replacefilter token="@HELP_SCREEN_EXAMPLE_HELP@"
                value="${help.screen.example.help}"/>
            <replacefilter token="@HELP_FORMATTER_EXAMPLE@"
                value="${help.formatter.example}"/>
            <replacefilter token="@HELP_FORMATTER_EXAMPLE_OUTPUT@"
                value="${help.formatter.example.output}"/>
            <replacefilter token="@EXAMPLE_STACK_TRACE@"
                value="${example.stack.trace}"/>
        </replace>
    </target>
</project>
